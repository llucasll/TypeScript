=== tests/cases/compiler/argumentsObjectIterator02_ES6.ts ===
function doubleAndReturnAsArray(x: number, y: number, z: number): [number, number, number] {
>doubleAndReturnAsArray : (x: number, y: number, z: number) => [number, number, number]
>x : number
>y : number
>z : number

    let blah = arguments[Symbol.iterator];
>blah : () => IterableIterator<any, any, undefined>
>arguments[Symbol.iterator] : () => IterableIterator<any, any, undefined>
>arguments : IArguments
>Symbol.iterator : unique symbol
>Symbol : SymbolConstructor
>iterator : unique symbol

    let result = [];
>result : any[]
>[] : undefined[]

    for (let arg of blah()) {
>arg : any
>blah() : IterableIterator<any, any, undefined>
>blah : () => IterableIterator<any, any, undefined>

        result.push(arg + arg);
>result.push(arg + arg) : number
>result.push : (...items: any[]) => number
>result : any[]
>push : (...items: any[]) => number
>arg + arg : any
>arg : any
>arg : any
    }
    return <[any, any, any]>result;
><[any, any, any]>result : [any, any, any]
>result : any[]
}


